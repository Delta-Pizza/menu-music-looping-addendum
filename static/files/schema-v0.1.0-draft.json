{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://json.schemastore.org/pd3mod-0.1.0-draft.json",

  "title": "PAYDAY 3 Mod Metadata",
  "description": "Metadata describing a mod for the PAYDAY 3 video game",
  "type": "object",

  "definitions": {
    "contactInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Contact e-mail pertaining to the mod"
        },
        "irc": {
          "type": "string",
          "description": "IRC channel pertaining to the mod. Must be of a valid URL format"
        },
        "homepage": {
          "type": "string",
          "description": "Project or user homepage. Must be a valid HTTP/HTTPS address"
        },
        "issues": {
          "type": "string",
          "description": "Project issue tracker. Must be a valid HTTP/HTTPS address"
        },
        "sources": {
          "type": "string",
          "description": "Project source code repository. Must be a valid URL"
        }
      },
      "additionalProperties": {
        "type": "string",
        "description": "Custom contact or profile information"
      }
    },
    "person": {
      "oneOf": [
        {
          "type": "string",
          "description": "The name of the person"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the person"
            },
            "contact": {
              "description": "Contact information for the person",
              "$ref": "#/definitions/contactInfo"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "versionRanges": {
      "oneOf": [
        {
          "$ref": "#/definitions/versionRange"
        },
        {
          "type": "array",
          "description": "Multiple version ranges that are combined with an \"OR\" relationship - only one of the ranges needs to match",
          "items": {
            "$ref": "#/definitions/versionRange"
          }
        }
      ]
    },
    "versionRange": {
      "type": "string",
      "description": "A version range that matches versions. The following variants are supported:\n\n- A single asterisk matches any version.\n- Ranges following NPM semver specification including >=, >, =, <, <=, X-ranges (1.x), tilde ranges (fixed minor) and caret ranges (fixed major).\n- Additionally exact string matches will always be performed.",
      "x-intellij-html-description": "<p>A version range or an array of those that match versions. The following variants are supported:</p><ul><li><code>*</code> matches any version.</li><li>Ranges following <a href=\"https://docs.npmjs.com/about-semantic-versioning\">NPM semver specification</a>:<ul><li><code>&gt;=</code>, <code>&gt;</code>, <code>=</code>, <code>&lt;</code> and <code>&lt;</code></li><li>X-ranges to specify variable components, e.g. <code>1.x</code></li><li>tilde ranges that allow patch version changes, e.g. <code>~1.2.3</code></li><li>caret ranges that allow up to minor version changes, e.g. <code>^1.2.3</code></li></ul></li><li>Exact string matches are always performed as well.</li></ul><p>If an array of ranges is used, they're treated as in an \"OR\" relationship - only one of the ranges needs to match.</p>",
      "markdownDescription": "A version range or an array of those that match versions. The following variants are supported:\n\n- `*` matches any version.\n- Ranges following [NPM semver specification](https://docs.npmjs.com/about-semantic-versioning):\n  - `>=`, `>`, `=`, `<` and `<=`\n  - X-ranges to specify variable components, e.g. `1.x`\n  - tilde ranges that allow patch version changes, e.g. `~1.2.3`\n  - caret ranges that allow up to minor version changes, e.g. `^1.2.3`\n- Exact string matches are always performed as well.\n\nIf an array of ranges is used, they're treated as in an \"OR\" relationship - only one of the ranges needs to match."
    },
    "tag": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-_]{1,63}$",
      "description": "A tag is a category that applies to the mod, can be an array of multiple. For example \"hud\", \"heist\" or \"weapon\". Check this wiki for commonly used tags: TODO"
    }
  },
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z][a-z0-9-_]{1,63}$",
      "description": "The mod identifier"
    },
    "version": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
      "description": "The mod version"
    },
    "schemaVersion": {
      "type": "integer",
      "description": "The version of the pd3mod.json schema",
      "const": 1
    },
    "name": {
      "type": "string",
      "description": "Name of the mod"
    },
    "description": {
      "type": "string",
      "description": "Description of the mod"
    },
    "environment": {
      "type": "string",
      "enum": [
        "*",
        "client",
        "server"
      ],
      "description": "The environment where this mod will be loaded"
    },
    "updateProvider": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["githubReleases"]
            },
            "repository": {
              "type": "string",
              "description": "URL to a GitHub repository, can be shortened to just the slug (e.g. user/repository)"
            }
          },
          "description": "Update provider using the GitHub releases API",
          "required": ["type", "repository"]
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["gitlabReleases"]
            },
            "repository": {
              "type": "string",
              "description": "URL to a GitLab repository, can be shortened to just the slug (e.g. user/repository)"
            },
            "url": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": "Update provider using the GitLab releases API",
          "required": ["type", "repository"]
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["modworkshop"]
            },
            "id": {
              "type": "integer",
              "minimum": 1
            }
          },
          "description": "Update provider using the ModWorkShop API",
          "required": ["type", "id"]
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["custom"]
            },
            "metadataUrl": {
              "type": "string",
              "format": "uri"
            }
          },
          "description": "Update provider using a URL to a separate metadata file",
          "required": ["type", "metadataUrl"]
        }
      ]
    },
    "depends": {
      "type": "object",
      "description": "id→versionRange map for dependencies. Failure to meet these causes a hard failure",
      "additionalProperties": {
        "$ref": "#/definitions/versionRanges"
      }
    },
    "recommends": {
      "type": "object",
      "description": "id→versionRange map for dependencies. Failure to meet these causes a soft failure (warning)",
      "additionalProperties": {
        "$ref": "#/definitions/versionRanges"
      }
    },
    "suggests": {
      "type": "object",
      "description": "id→versionRange map for dependencies. Are not matched and are mainly used as metadata",
      "additionalProperties": {
        "$ref": "#/definitions/versionRanges"
      }
    },
    "conflicts": {
      "type": "object",
      "description": "id→versionRange map for dependencies. A successful match causes a soft failure (warning)",
      "additionalProperties": {
        "$ref": "#/definitions/versionRanges"
      }
    },
    "breaks": {
      "type": "object",
      "description": "id→versionRange map for dependencies. A successful match causes a hard failure",
      "additionalProperties": {
        "$ref": "#/definitions/versionRanges"
      }
    },
    "authors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/person"
      },
      "description": "The direct authorship information"
    },
    "contributors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/person"
      },
      "description": "Contributors to this mod"
    },
    "contact": {
      "$ref": "#/definitions/contactInfo",
      "description": "Contact information for the mod"
    },
    "license": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "description": "The software license this mod is licensed under. If possible, use an identifier from the SPDX License List: https://spdx.org/licenses.",
      "x-intellij-html-description": "The software license this mod is licensed under. If possible, use an identifier from the <a href=\"https://spdx.org/licenses\">SPDX License List</a>.",
      "markdownDescription": "The software license this mod is licensed under. If possible, use an identifier from the [SPDX License List](https://spdx.org/licenses)."
    },
    "icon": {
      "type": "string",
      "description": "The path to a single .PNG file from the root of the archive"
    },
    "tags": {
      "oneOf": [
        {
          "$ref": "#/definitions/tag"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tag"
          }
        }
      ]
    },
    "custom": {
      "type": "object",
      "description": "A map of namespace:id→value for custom data fields."
    }
  },
  "required": [
    "id",
    "version",
    "schemaVersion",
    "environment"
  ]
}